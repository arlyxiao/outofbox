version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
      # - "443:443"
    depends_on:
      - web
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    ports:
      - 13306:3306
    environment:
        # MYSQL_DATABASE: 'development_amber'
        # MYSQL_USER: 'root'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      # MYSQL_ROOT_PASSWORD: 'root'
    command:
      - "--innodb_large_prefix=1"
      - "--innodb_file_format=barracuda"
      - "--innodb_file_format_max=barracuda"
      - "--innodb_file_per_table=1"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--explicit_defaults_for_timestamp"
      - "--bind-address=0.0.0.0"
      - "--innodb_use_native_aio=0"
        # - "--skip-grant-tables"
        # - "--innodb_force_recovery=4"
    volumes:
      - ./db-data:/var/lib/mysql

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  nodejs:
    build:
      context: ./docker/nodejs
      dockerfile: Dockerfile
    volumes:
      - /home/player/practicing/outofbox:/var/www:rw
    ports:
      - "5000:5000"
    command: sh -c "cd client-side && npm run dev -- -p 5000 -H 0.0.0.0"

  web:
    build:
      context: ./docker/web
      dockerfile: Dockerfile
    expose:
      - "8000"
    command: /usr/local/bin/gunicorn web.wsgi:application -w 2 -b :8000
    volumes:
      - /home/player/practicing/outofbox:/var/www:rw
    ports:
      - "8000:8000"
    depends_on:
      - nodejs
      - mysql
      - redis

